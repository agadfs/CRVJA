
' Nick's Wonderland based on Dithell's Wonderland  
Set Buffers 10 

LED OFF
If Length(5)=0 
   Load "Wonderland_Samples.Abk" 
End if

SAM BANK 5 
SAM LOOP OFF 
Key Speed 10,2

C_PLY1_BOBNUM = 1
C_PLY2_BOBNUM = 0

Dim SCR(61,28),C(15) 'Playfield is divided in tiles (16x12), Common Color Palette

'Foe/Baddies related
Dim A_FOE_X(11),A_FOE_Y(11),A_FOE_XSPD(11),A_FOE_YSPD(11),MY(11),F(11),A_FOETYPE(11)

'Fruit/Goodies related
Dim FX(4),FY(4),FXS(4),FYS(4),DX(4),DY(4),FF(4) 
Dim A_FRUITSCORE(4) 
A_FRUITSCORE(0)=100 : A_FRUITSCORE(1)=300 : A_FRUITSCORE(2)=500 : A_FRUITSCORE(3)=700

Dim RBOWSEED(5) 
For L=1 To 5 
   RBOWSEED(L)=Peek(Start(4)+7200+L) 'Start of mem bank 4
Next L 

Dim CHAN(6) 
CHAN(1)=1 : CHAN(2)=2 : CHAN(3)=4 : CHAN(4)=12 : CHAN(5)=12 : CHAN(6)=12 

Dim A_TRAMPOLINEIMG(3) 'Trampoline images
A_TRAMPOLINEIMG(0)=10 : A_TRAMPOLINEIMG(1)=10 : A_TRAMPOLINEIMG(2)=26 : TNA_TRAMPOLINEIMG(3)=27


'
TITLE: 
Sprite Off 
'Wait Vbl 
Set Rainbow 1,14,232,"","","" 
Rainbow 1,0,0,0 'Set a copper rainbow but don't display it?
'Load Iff "Title_Screen.Iff",0 'Will open screen 0.
Screen Open 0,320,200,8,Lowres
Curs Off 
Hide On 'Turn off system mouse pointer (sprite 0)
Bob Off 
Clear Key 
GAME=1 
'P=0 
'If BGON=0 then Bob 1,247,141,75 
'Bob 0,84,92+P,74 
Bob Update On 'Automatic update ON
'Auto View On 
'While GAME=0 
   'If Jup(1) and P>0 then Gosub AUP 'Arrow UP
   'If Jdown(1) and P<50 then Gosub ADOWN 
   'Menu selection
   'If Fire(1) and P=0 then GAME=1 
   'If Fire(1) and P=25 then GAME=2 'Map editor
   'If Fire(1) and P=50 then Gosub TBCK 
'Wend 
If GAME=1 then Gosub GAME 
'If GAME=2 then Gosub MAPPER 
Goto  TITLE 
' 

GAME: 
LEV=1 
V_PLY1LIVES=5
V_PLY1SCORE=0
EXSCOR=0
C_EXTRALIFESCORE=5000 
'Sets color 0 to black 32 times?
'For L=0 To 31 : Colour 0,0 : Next L
' 

SETUPLEV: 
Sprite Off 
Gosub SETUPSCRDAT 
' 

SETSCR: 
GOTBLK=0 
V_CLRBLOCKREMAIN=0 

Gosub SETUPSCREEN 
Screen Offset 0,0,0 
Rainbow 1,RSY/2,46,172 
'Bob Update Off 

Gosub SETRBOW 

Gosub F_SETUPGAMEMAP 
'Wait Vbl 
Rainbow 1,RSY/2,46,172 
Gosub SPRPAL 
'Autoback 0

'Init PLaYer vars
V_PLY1_X=384 : V_PLY1_Y=-12 : V_PLY1_OLDX=V_PLY1_X : MY=288	'Why -12? falling?
': OY=V_PLY1_Y
'MPX=V_PLY1_X/16 : MPY=V_PLY1_Y/12 'Unused but should be!
V_PLY1_XSPD=0 : V_PLY1_YSPD=0 : V_PLY1_ANIM_STEP=0 : V_PLY1_DIR=24 'Store image # for direction

V_PLY2_X=368 : V_PLY2_Y=-12 : V_PLY2_OLDX=V_PLY2_X
V_PLY2_XSPD=0 : V_PLY2_YSPD=0 : V_PLY2_ANIM_STEP=0 : V_PLY2_DIR=24

RSX=0 : RSY=168 

C_MAX_XSPD=8
V_PLY1INERTIA=1
B_PLY1_JUMPN=False : B_PLY1JUMPHOLD=False : JSPD=-8 'Only trampoline?
'JH=-12 

CB=0 
HEART=0 
MAN=0 
GBALL=0 
BOUNCE=0 
V_MAINLOOPCNTR=0 
V_PLY1_HURT=False
'Autoback 0 'already done
Screen 0 

For L=0 To 3 
   Gosub INITFRUIT 
Next L 

For L=0 To NBAD-1 
   On A_FOETYPE(L) Gosub INITBLOB,INITREDTHING,INITGREENTHING,INITEYE,INITSNAKE 
   If A_FOETYPE(L)=1 or A_FOETYPE(L)=3 then A_FOE_Y(L)=A_FOE_Y(L)+8
   If A_FOETYPE(L)=5 and A_FOE_X(L)>896 then A_FOE_X(L)=896
Next L 

I$="" 
Clear Key 
' 

MAINLOOP: 
' 
I$=Lower$(Inkey$) 
SCOD=Scancode 
Clear Key 
B_PLY1DIRHOLD=False

Bob Clear 'sure?

' Quit if ESC key was pressed.
If SCOD=69 then Screen Close  0 : Screen Close  1 : Goto  TITLE 'Don't close Screen 0?
' Move Mario
If Jleft(1) and V_PLY1_XSPD>-C_MAX_XSPD and V_MAINLOOPCNTR mod V_PLY1INERTIA=0 then Dec V_PLY1_XSPD : B_PLY1DIRHOLD=True : V_PLY1_DIR=22
If Jright(1) and V_PLY1_XSPD<C_MAX_XSPD and V_MAINLOOPCNTR mod V_PLY1INERTIA=0 then Inc V_PLY1_XSPD : B_PLY1DIRHOLD=True : V_PLY1_DIR=24 

If Fire(1) and(False = B_PLY1_JUMPN or GBALL>0) and False=B_PLY1JUMPHOLD then B_PLY1_JUMPN=True : MY=288 : B_PLY1JUMPHOLD=True : V_PLY1_YSPD=-12 : SPL=3 : Gosub F_PLAYSAMPLE : If GBALL>0 then GBALL=-1 

If Fire(1)=0 then B_PLY1JUMPHOLD=False
If False=B_PLY1DIRHOLD and V_MAINLOOPCNTR mod(V_PLY1INERTIA*3)=0 then V_PLY1_XSPD=V_PLY1_XSPD-Sgn(V_PLY1_XSPD) 
V_PLY1_OLDX = V_PLY1_X
': OY=V_PLY1_Y 

' Scan Input and update Luigi's coordinates/attributes
If Jleft(0) and V_PLY2_XSPD>-C_MAX_XSPD and V_MAINLOOPCNTR mod V_PLY2INERTIA=0 then Dec V_PLY2_XSPD : B_PLY2DIRHOLD=True : V_PLY2_DIR=22
If Jright(0) and V_PLY2_XSPD<C_MAX_XSPD and V_MAINLOOPCNTR mod V_PLY2INERTIA=0 then Inc V_PLY2_XSPD : B_PLY2DIRHOLD=True : V_PLY2_DIR=24 

If Fire(0) and B_PLY2_JUMPN=0 and False=B_PLY2JUMPHOLD then B_PLY2_JUMPN=1 : B_PLY2JUMPHOLD=True : V_PLY2_YSPD=-12 : SPL=3 : Gosub F_PLAYSAMPLE

If Fire(0)=0 then B_PLY2JUMPHOLD=False
If False=B_PLY2DIRHOLD and V_MAINLOOPCNTR mod(V_PLY2INERTIA*3)=0 then V_PLY2_XSPD=V_PLY2_XSPD-Sgn(V_PLY2_XSPD) 
V_PLY2_OLDX = V_PLY2_X

'Update Player1/Mario coordinate, when not grabbing the balloon.
If GBALL<1 then V_PLY1_X=V_PLY1_X+V_PLY1_XSPD : V_PLY1_Y=V_PLY1_Y+V_PLY1_YSPD 

'Make Luigi Mario's "shadow".
'V_PLY2_X = V_PLY1_X - 16
'V_PLY2_Y = V_PLY1_Y

If V_PLY1_X<0 then V_PLY1_X=0 : V_PLY1_XSPD=0 
If V_PLY1_X>944 then V_PLY1_X=944 : V_PLY1_XSPD=0 

If V_PLY1_Y<0 then V_PLY1_Y=0 : V_PLY1_YSPD=0 
If V_PLY1_Y>288 then V_PLY1_Y=288 

If V_PLY1_Y<MY then MY=V_PLY1_Y

' Check mans conditions 
'SUP=SCR((V_PLY1_X+8)/16+1,(V_PLY1_Y)/12+1) 'Unused?

V_PLY1_TILEUNDER=SCR((V_PLY1_X+8)/16+1,(V_PLY1_Y+24)/12+1) 
If V_PLY1_TILEUNDER>6 and V_PLY1_TILEUNDER<10 then V_PLY1INERTIA=4 : Else V_PLY1INERTIA=1 'If icy, slide more.

SC=Bob Col(C_PLY1_BOBNUM) 'TODO check individual collision only if true.
'Holding the balloon.
If Col(14) and GBALL=0 and V_PLY1_Y>BY+4 then GBALL=1 : Gosub GRAB 
If Col(14)=0 then GBALL=0 

If V_PLY1_Y=288 then V_PLY1_HURT=True 'Felt down a cliff.

For L=0 To NBAD 
   If Col(2+L) then V_PLY1_HURT=True
Next L

If V_PLY1_HURT=True then Goto F_PLY_BOBO 'DEaD or KILLED or Outch!

If GBALL>0 then Gosub DRIFT 'Float? Fall slowly
' 
If V_PLY1_TILEUNDER>0 and V_PLY1_YSPD>=0 and V_PLY1_TILEUNDER<>10 and V_PLY1_Y/12*12>=MY-2 '<> means not equal
   V_PLY1_YSPD=0 : B_PLY1_JUMPN=False : JSPD=-2 : V_PLY1_Y=V_PLY1_Y/12*12 : GBALL=-1 : BOUNCE=0 
Else 
   Inc V_PLY1_YSPD : B_PLY1_JUMPN=True 'Reversed?
End if

If V_PLY1_YSPD<0 and Fire(1)=0 and BOUNCE=0 then V_PLY1_YSPD=V_PLY1_YSPD/2 'Fall speed after a jumping.
If V_PLY1_YSPD>12 then V_PLY1_YSPD=12 'Cap free falling speed.

' Trampoline
If V_PLY1_TILEUNDER=10 and(V_PLY1_YSPD>=0 or GBALL=1)
  V_PLY1_YSPD=-V_PLY1_YSPD+JSPD
  Gosub TRAMP
  SPL=4
  Gosub F_PLAYSAMPLE
  MY=288
  BOUNCE=1
  GBALL=True '-1
  If JSPD>-10 then Dec JSPD
End If
' 
V_PLY1_XSPD=V_PLY1_X-144 : V_PLY1_YSPD=V_PLY1_Y-64 
If V_PLY1_XSPD<0 then V_PLY1_XSPD=0 
If V_PLY1_XSPD>640 then V_PLY1_XSPD=640 

If V_PLY1_YSPD<0 then V_PLY1_YSPD=0 
If V_PLY1_YSPD>168 then V_PLY1_YSPD=168 

'Force the step/jumping image MSTeP
If 4=V_PLY1INERTIA and True=B_DIRHOLD then V_PLY1_ANIM_STEP=(V_PLY1_ANIM_STEP+1) mod 2 : Else V_PLY1_ANIM_STEP=(V_PLY1_X/16) mod 2 
If V_PLY1_X = V_PLY1_OLDX then V_PLY1_ANIM_STEP=0
If B_PLY1_JUMPN=True or GBALL>0 then V_PLY1_ANIM_STEP=1

' CALC CAMERA. Centers it around Mario
XI=V_PLY1_XSPD-RSX 
YI=V_PLY1_YSPD-RSY 
If XI<0 then RSX=RSX+(XI-10)/10 
If XI>0 then RSX=RSX+(XI+10)/10 
If YI<0 then RSY=RSY+(YI-6)/6 
If YI>0 then RSY=RSY+(YI+6)/6 

If RSX<0 then RSX=0 
If RSX>640 then RSX=640 
If RSY<0 then RSY=0 
If RSY>120 then RSY=120 

Gosub FRUITS

'Draw Player1 / Mario
Bob C_PLY1_BOBNUM, V_PLY1_X, V_PLY1_Y, V_PLY1_DIR+V_PLY1_ANIM_STEP

Bob C_PLY2_BOBNUM, V_PLY2_X, V_PLY2_Y, V_PLY1_DIR+V_PLY1_ANIM_STEP

'Show lives left
If V_PLY1LIVES>1 then Sprite 2,192,224,V_PLY1_DIR+V_PLY1_ANIM_STEP 
If V_PLY1LIVES>2 then Sprite 4,216,224,V_PLY1_DIR+V_PLY1_ANIM_STEP 
' 
If NB=1 then Gosub MOVEBALL

For L=0 To NBAD 
   On A_FOETYPE(L) Gosub MOVEBLOB,MOVEREDTHING,MOVEGREENTHING,MOVEEYE,MOVESNAKE 'FOETYPE cannot be 0?
Next L 
' 
Rainbow 1,RSY/2,46,172 
Screen Offset 0,RSX,RSY 
'Wait Vbl 
'Bob Clear 
If V_PLY1_TILEUNDER>10 and V_PLY1_TILEUNDER<16 and B_PLY1_JUMPN=False then Gosub FILBLK 

If V_TRAMPOLINEIMGINDX>0 then Gosub TNMOVE 

Bob Draw
Wait Vbl 'sure?
Screen Swap : Wait Vbl 
' 
Bob Clear 
If V_PLY1_TILEUNDER>10 and V_PLY1_TILEUNDER<16 and B_PLY1_JUMPN=False then Gosub FILBLK : Gosub SCBLK 

If V_TRAMPOLINEIMGINDX>0 then Gosub TNMOVE 
Bob Draw 
Screen Swap : Wait Vbl
Inc V_MAINLOOPCNTR 

If(V_CLRBLOCKREMAIN>0 and V_CLRBLOCKREMAIN=GOTBLK) or (I$="c") then Goto F_LEVELCOMPLETED 
Goto  MAINLOOP 'END of main loop
' 

F_PLY_BOBO: 
Dec V_PLY1LIVES 
SPL=5 'Death woble sound
Gosub F_PLAYSAMPLE

For L=0 To 50 
   Bob C_PLY1_BOBNUM,V_PLY1_X,Y,22+L mod 4
   Bob Update
   Wait Vbl 
Next L

Bob Off C_PLY1_BOBNUM
Bob Update 
Wait Vbl 

SPL=6 'Game over sound
If V_PLY1LIVES=0 then Gosub F_PLAYSAMPLE

Screen 0 
Fade 2 
Wait 64 
Wait Vbl 
'Sprite Off 
Rainbow 1,0,0,0 
Screen Close  1 
Bob Off 
Bob Update 
Wait Vbl 

If V_PLY1LIVES>0 then Goto SETSCR 'Restart level

GAMEOVER: 
Return 
' 

F_LEVELCOMPLETED: 
Screen 0 
Wait 25 
Sprite Off 
'Wait Vbl 
Bob Off 
Bob Update 
Wait Vbl 
Screen Close  0 

Screen Close  1 
Inc LEV 
If LEV=6 then LEV=1 
Goto  SETUPLEV 

' Set screens palette to be the same as object palette
SPRPAL: 
Screen 0 
Get Sprite Palette 
Colour 0,0 
For L=0 To 15 
   C(L)=Colour(L) 
   Colour L+16,C(L) 
Next L

Screen 1 
For L=0 To 15 
   Colour L+16,C(L) 
Next L

Colour 30,0 
Screen 0 
Return 

' 
F_SETUPGAMEMAP: 
If LEV<1 then LEV=5 
If LEV>5 then LEV=1 

Screen 1 
Pen 3 : Paper 0 
Locate 36,2 : Print Using "#";LEV 
Gosub F_UPDATESCOREDISPLAY 

Screen 0 
Autoback 0
Bob Update Off 'sure?
NB=0 : V_CLRBLOCKREMAIN=0 : NBAD=0 
For L=0 To 11 : A_FOETYPE(L)=0 : Next L 

P=Start(4)+1440*(LEV-1) 
For X=1 To 60 
   For Y=1 To 24 
      If SCR(X,Y)>0 and SCR(X,Y)<11 then Paste Bob X*16-16,Y*12-12,SCR(X,Y) 
      'Block color already set but paint clear block on map.
	  If SCR(X,Y)>10 and SCR(X,Y)<16 then Inc V_CLRBLOCKREMAIN : Paste Bob X*16-16,Y*12-12,63 
      
	  'If SCR(X,Y)>110 then Paste Bob X*16-16,Y*12-12,SCR(X,Y)-100 'Set colored block from start.
      
	  If Peek(P)=16 then BX=X*16-16 : BY=Y*12-12 : NB=1 
      
	  If Peek(P)>16 and Peek(P)<22 and NBAD<11 then A_FOE_X(NBAD)=X*16-16 : A_FOE_Y(NBAD)=Y*12-12 : A_FOETYPE(NBAD)=Peek(P)-16 : Inc NBAD 
      
	  If SCR(X,Y)>15 and SCR(X,Y)<22 then SCR(X,Y)=0 
      Inc P 
   Next Y 
Next X 

Wait Vbl 'Wait for pasted bobs
Screen Copy Logic To Physic 'Both buffer are the same. Use Double Buffer here instead?
Wait Vbl 
Return 

'
SETUPSCRDAT: 
P=Start(4)+1440*(LEV-1) 
For X=1 To 60 
   For Y=1 To 24 
      SCR(X,Y)=Peek(P) 
      Inc P 
   Next Y 
Next X 
Return 
' 

SETUPSCREEN: 
Auto View Off 
'If BGON=1 and GAME=1 then Load Iff "Landscape.Iff",0
If GAME=1 then Load Iff "Landscape.Iff",0  'Open or overwrite screen 0
'If BGON=0 or GAME=2 then Screen Open 0,960,288,16,Lowres : Curs Off : Cls 14 
Palette 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 
Curs Off 
'Wait Vbl 
Double Buffer 
If GAME=1 then Load Iff "Score_Panel.Iff",1 : Screen Display 0,128,48,320,168 : Screen Display 1,128,218,320,32 

'If GAME=2 then Load Iff "Editor_Panel.Iff",1 : Screen Display 0,128,48,320,144 : Screen Display 1,128,194,320,32 
Screen 1 : Paper 0 : Pen 3 
Screen 0 : Curs Off : Flash Off 
Auto View On 
Return

' 
MOVEBALL: 
If GBALL=1 then BY=BY+2 
If GBALL<>1 and BY>0 and SCR(BX/16+1,BY/12+1)=0 then Dec BY 
Bob 14,BX,BY,28 
Return 

'Fills the clear block with the correct color.
FILBLK: 
SCR((V_PLY1_X+8)/16+1,(V_PLY1_Y+24)/12+1)= V_PLY1_TILEUNDER+100 

PX=(V_PLY1_X+8)/16*16 
PY=(V_PLY1_Y+24)/12*12 

Paste Bob PX,PY,V_PLY1_TILEUNDER 
Return 

'Stepped on a clear block
SCBLK: 
SPL=1 
Gosub F_PLAYSAMPLE 

V_PLY1SCORE=V_PLY1SCORE+(V_PLY1_TILEUNDER-10)*10 
EXSCOR=EXSCOR+V_PLY1SCORE

Gosub F_UPDATESCOREDISPLAY 
Inc GOTBLK 
Return 
 
'Player latch to Balloon
GRAB: 
B_PLY1JUMPHOLD=False
V_PLY1_XSPD=0 : V_PLY1_YSPD=0 
V_PLY1_X=X Bob(14) 
V_PLY1_Y=Y Bob(14)+20 
Return 
' 

DRIFT: 
V_PLY1_X=X Bob(14) 
V_PLY1_Y=Y Bob(14)+20 
Return 
' 

TRAMP: 
TNX=(V_PLY1_X+8)/16*16
TNY=(V_PLY1_Y+24)/12*12
V_TRAMPOLINEIMGINDX=8
Return 
' 

TNMOVE: 
Dec V_TRAMPOLINEIMGINDX 
Paste Bob TNX,TNY,A_TRAMPOLINEIMG(V_TRAMPOLINEIMGINDX/2) 
Return 

' "Baddies" initialisation starts here:
'
INITBLOB: 
A_FOE_XSPD(L)=Rnd(6)-3 
A_FOE_YSPD(L)=-6-Rnd(10) 
F(L)=7 
MY(L)=288 
Return 

' 
MOVEBLOB: 
If F(L)>0 then Dec F(L) : I=38-Abs(F(L)-3) : Goto NOM 

A_FOE_Y(L)=A_FOE_Y(L)+A_FOE_YSPD(L) 
If A_FOE_Y(L)<=MY(L) then MY(L)=A_FOE_Y(L) 
A_FOE_X(L)=A_FOE_X(L)+A_FOE_XSPD(L) 

If A_FOE_X(L)<0 then A_FOE_X(L)=0 
If A_FOE_X(L)>944 then A_FOE_X(L)=944 
If A_FOE_Y(L)<0 then A_FOE_Y(L)=0 : A_FOE_YSPD(L)=0 : A_FOE_XSPD(L)=0 
If A_FOE_Y(L)>288 then A_FOE_Y(L)=288 

S=SCR((A_FOE_X(L)+8)/16+1,(A_FOE_Y(L)+4)/12+1) 
If F(L)=0 and(A_FOE_Y(L)+4)/12*12-4>=MY(L)-2 and(S>0 and A_FOE_YSPD(L)>0) or A_FOE_Y(L)=288 then A_FOE_Y(L)=(A_FOE_Y(L)+4)/12*12-4 : Gosub INITBLOB 
I=34 
If A_FOE_YSPD(L)<10 then Inc A_FOE_YSPD(L) 
NOM: 
If A_FOE_X(L)<RSX-16 or A_FOE_X(L)>RSX+320 or A_FOE_Y(L)>RSY+168 or A_FOE_Y(L)<RSY-16 then Bob Off L+2 : Return 
Bob L+2,A_FOE_X(L),A_FOE_Y(L)-12,I 
Return

'
MOVEREDTHING: 
S1=SCR((A_FOE_X(L)-8)/16+1,(A_FOE_Y(L)/12+2)) 
S2=SCR((A_FOE_X(L)+20)/16+1,(A_FOE_Y(L)/12+2)) 

If S1=0 or A_FOE_X(L)=0 then A_FOE_XSPD(L)=4 
If S2=0 or A_FOE_X(L)=948 then A_FOE_XSPD(L)=-4 
A_FOE_X(L)=A_FOE_X(L)+A_FOE_XSPD(L)

If A_FOE_X(L)<RSX-16 or A_FOE_X(L)>RSX+320 or A_FOE_Y(L)>RSY+168 or A_FOE_Y(L)<RSY-32 then Bob Off L+2 : Return 
Bob L+2,A_FOE_X(L),A_FOE_Y(L)+2,39+(V_MAINLOOPCNTR/2) mod 6 
Return 

INITREDTHING: 
A_FOE_XSPD(L)=-4 
Return 
' 

MOVEGREENTHING: 
If F(L)=2 and Rnd(6)>0 then Bob L+2,A_FOE_X(L),A_FOE_Y(L)-8,72 : Return 

If F(L)=2 then F(L)=0

A_FOE_Y(L)=A_FOE_Y(L)+A_FOE_YSPD(L) 
If A_FOE_Y(L)<MY(L) then MY(L)=A_FOE_Y(L) 
O=A_FOE_X(L) 
I=0 
A_FOE_X(L)=A_FOE_X(L)+A_FOE_XSPD(L) 
If A_FOE_X(L)<0 then A_FOE_X(L)=0 : A_FOE_XSPD(L)=-A_FOE_XSPD(L) 
If A_FOE_X(L)>944 then A_FOE_X(L)=944 : A_FOE_XSPD(L)=-A_FOE_XSPD(L) 
If A_FOE_Y(L)<0 then A_FOE_Y(L)=0 : A_FOE_YSPD(L)=0 : A_FOE_XSPD(L)=0 
If A_FOE_Y(L)>288 then A_FOE_Y(L)=288 
S=SCR((A_FOE_X(L)+8+A_FOE_XSPD(L)*4)/16+1,(A_FOE_Y(L)+4)/12+1) 
If F(L)=0 and(A_FOE_Y(L)+4)/12*12-4>=MY(L)-2 and(S>0 and A_FOE_YSPD(L)>0) or A_FOE_Y(L)=288 then A_FOE_Y(L)=(A_FOE_Y(L)+4)/12*12-4 : Gosub WGREENTHING 

If(S=0 or Rnd(50)=0) and F(L)=1 then A_FOE_X(L)=O : Gosub JGREENTHING : Bob L+2,A_FOE_X(L),A_FOE_Y(L)-8,72 : Return 

If A_FOE_YSPD(L)<10 and F(L)=0 then Inc A_FOE_YSPD(L) 
If A_FOE_X(L)<RSX-16 or A_FOE_X(L)>RSX+320 or A_FOE_Y(L)>RSY+168 or A_FOE_Y(L)<RSY-16 then Bob Off L+2 : Return 

If F(L)=1 then I=70+(V_MAINLOOPCNTR+L) mod 2 
If F(L)=0 and A_FOE_YSPD(L)<0 then I=73 
If F(L)=0 and A_FOE_YSPD(L)>=0 then I=69 
Bob L+2,A_FOE_X(L),A_FOE_Y(L)-8,I 
Return 
' 

INITGREENTHING: 
Gosub WGREENTHING 
Return 

'Jump/Fly?
JGREENTHING: 
F=(A_FOE_Y(L)-Y)/8 
If F<1 then F=1 
A_FOE_YSPD(L)=Max(-16,-4-Rnd(F)) 
If A_FOE_X(L)>X then A_FOE_XSPD(L)=-Rnd(2)-1 : Else A_FOE_XSPD(L)=Rnd(2)+1 
F(L)=2 
I=72 
MY(L)=288 
Return 

'Walk?
WGREENTHING: 
If A_FOE_X(L)>V_PLY1_X then A_FOE_XSPD(L)=-2 : Else A_FOE_XSPD(L)=2 
A_FOE_YSPD(L)=0 
F(L)=1 
Return 
' 

MOVEEYE: 
If V_MAINLOOPCNTR mod 2 then Goto NOCHASE
 
If A_FOE_X(L)<V_PLY1_X and A_FOE_XSPD(L)<9 then Inc A_FOE_XSPD(L) 
If A_FOE_X(L)>V_PLY1_X and A_FOE_XSPD(L)>-9 then Dec A_FOE_XSPD(L) 
If A_FOE_Y(L)<Y and A_FOE_YSPD(L)<9 then Inc A_FOE_YSPD(L) 
If A_FOE_Y(L)>Y and A_FOE_YSPD(L)>-9 then Dec A_FOE_YSPD(L) 

NOCHASE: 
A_FOE_X(L)=A_FOE_X(L)+A_FOE_XSPD(L)
A_FOE_Y(L)=A_FOE_Y(L)+A_FOE_YSPD(L)

If A_FOE_X(L)<RSX-16 or A_FOE_X(L)>RSX+320 or A_FOE_Y(L)>RSY+168 or A_FOE_Y(L)<RSY-16 then Bob Off L+2 : Return 
Bob L+2,A_FOE_X(L),A_FOE_Y(L),45+V_MAINLOOPCNTR mod 2 
Return 

INITEYE: 
A_FOE_XSPD(L)=0 : A_FOE_YSPD(L)=0 
Return 
' 

MOVESNAKE: 
A_FOE_X(L)=A_FOE_X(L)+A_FOE_XSPD(L) 
S1=SCR((A_FOE_X(L)-8)/16+1,(A_FOE_Y(L)/12+2)) 
S2=SCR((A_FOE_X(L)+68)/16+1,(A_FOE_Y(L)/12+2)) 
If S1=0 or A_FOE_X(L)<0 then A_FOE_XSPD(L)=4 
If S2=0 or A_FOE_X(L)>896 then A_FOE_XSPD(L)=-4 

If A_FOE_X(L)<0 then A_FOE_X(L)=0 
If A_FOE_X(L)>896 then A_FOE_X(L)=896 

If A_FOE_X(L)<RSX-64 or A_FOE_X(L)>RSX+320 or A_FOE_Y(L)>RSY+168 or A_FOE_Y(L)<RSY-16 then Bob Off L+2 : Return 
If A_FOE_XSPD(L)=-4 then Bob L+2,A_FOE_X(L),A_FOE_Y(L),47+V_MAINLOOPCNTR mod 7 
If A_FOE_XSPD(L)=4 then Bob L+2,A_FOE_X(L),A_FOE_Y(L),55+V_MAINLOOPCNTR mod 7 
Return 

INITSNAKE: 
A_FOE_XSPD(L)=-4 
Return 
' 

F_UPDATESCOREDISPLAY: 
Screen 1 
Locate 1,2 : Print Using "######";V_PLY1SCORE
'Heart will appear when score is at or over threshold.
If EXSCOR>=C_EXTRALIFESCORE and HEART=0 then L=4 : Gosub INITFRUIT : HEART=1 
Screen 0 
Return 
' 

FRUITS: 
For L=0 To 3+HEART 
   If FF(L)>=0 then Gosub MNUM 
   If FF(L)<0 then Gosub MFRUIT 
Next L

R=Rnd(200) 

If R<5 
   DX(R)=Rnd(800)+72 
   DY(R)=Rnd(200)+32 
End if 
Return 
' 

MFRUIT:
If FX(L)>DX(L) and FXS(L)>-10 then Dec FXS(L) 
If FX(L)<DX(L) and FXS(L)<10 then Inc FXS(L) 

If FY(L)>DY(L) and FYS(L)>-10 then Dec FYS(L) 
If FY(L)<DY(L) and FYS(L)<10 then Inc FYS(L) 

FX(L)=FX(L)+FXS(L) 
FY(L)=FY(L)+FYS(L)

If Col(15+L) and FF(L)=-2 and FY(L)>-32 
  FF(L)=12
  V_PLY1SCORE=V_PLY1SCORE+A_FRUITSCORE(L)
  EXSCOR=EXSCOR+A_FRUITSCORE(L)
  
  SPL=2
  Gosub F_PLAYSAMPLE
  Gosub F_UPDATESCOREDISPLAY 
End If

Bob 15+L,FX(L),FY(L),29+L 
Return 

'Display collected fruit score.
MNUM: 
Dec FF(L)

If L<4 and FF(L)<0 then Gosub INITFRUIT : Return 

If L=4 and FF(4)<0 then Gosub EXTRA 'HEART

FY(L)=FY(L)-2

Bob 15+L,FX(L),FY(L),64+L 
Return 
' 

INITFRUIT: 
FX(L)=Rnd(944) 
FY(L)=-200-200*L 

DX(L)=Rnd(880)+32 
DY(L)=Rnd(240)+32 

FXS(L)=0 
FYS(L)=0 

FF(L)=-2 
Return 
' 

F_PLAYSAMPLE: 
Sam Stop CHAN(SPL) 
Sam Play CHAN(SPL),SPL 
Return 

'
SETRBOW: 
If LEV<1 then LEV=5 
If LEV>5 then LEV=1 

Set Rainbow 1,14,232,"","","" 
R=RBOWSEED(LEV)*64-1 

For Y=0 To 231 
   Rain(1,Y)=R-Y/15 
Next Y

Poke Start(4)+7200+LEV,RBOWSEED(LEV) 
Return 
' 

EXTRA: 
EXSCOR=V_PLY1SCORE mod C_EXTRALIFESCORE 
HEART=0 
Bob Off 19 
Inc V_PLY1LIVES 
Return 


