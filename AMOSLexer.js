// Generated from AMOS.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,108,763,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,
2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,
7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,
2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,
34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,
7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,
48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,
2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,
77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,
2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,
92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,
7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,
105,2,106,7,106,2,107,7,107,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,
1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,
1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,
1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,
12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,
1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,
18,1,18,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,
1,23,1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,
26,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,
1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,
32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,
1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,
36,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,
1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,
41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,44,
1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,
46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,
1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,
50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,
1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,
55,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,59,1,59,
1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,
61,1,61,1,61,1,61,1,61,1,62,3,62,546,8,62,1,62,4,62,549,8,62,11,62,12,62,
550,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,65,
1,65,1,66,1,66,5,66,570,8,66,10,66,12,66,573,9,66,1,66,1,66,1,67,4,67,578,
8,67,11,67,12,67,579,1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,
68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,71,1,71,
1,71,1,71,1,71,1,72,1,72,5,72,612,8,72,10,72,12,72,615,9,72,1,72,1,72,1,
73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,76,1,76,1,76,
1,77,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,79,1,79,1,79,1,79,1,79,1,80,1,
80,1,80,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,81,1,82,1,82,1,82,
1,82,1,82,1,83,1,83,1,83,1,83,1,83,1,84,1,84,1,84,1,84,1,84,1,84,1,84,1,
84,1,84,1,84,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,85,1,86,1,86,1,86,
1,86,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,87,1,88,1,88,1,88,1,88,1,
88,1,88,1,88,1,88,1,88,1,88,1,89,1,89,5,89,714,8,89,10,89,12,89,717,9,89,
1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,3,90,728,8,90,1,91,1,91,1,92,
1,92,1,93,1,93,1,94,1,94,1,95,1,95,1,96,1,96,1,97,1,97,1,98,1,98,1,99,1,
99,1,100,1,100,1,101,1,101,1,102,1,102,1,103,1,103,1,104,1,104,1,105,1,105,
1,106,1,106,1,107,1,107,0,0,108,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,
91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,
113,57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,
67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,
155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,
88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,
197,99,199,100,201,101,203,102,205,103,207,104,209,105,211,106,213,107,215,
108,1,0,6,1,0,48,57,2,0,10,10,13,13,3,0,9,10,13,13,32,32,1,0,34,34,3,0,65,
90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,773,0,1,1,0,0,0,0,3,1,0,0,0,
0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,
61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,
0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,
1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,
0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,
0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,
0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,
0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,
157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,
1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,
0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,
0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,
0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,0,207,1,0,0,0,
0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,0,0,215,1,0,0,0,1,217,1,0,0,0,3,
221,1,0,0,0,5,226,1,0,0,0,7,232,1,0,0,0,9,236,1,0,0,0,11,243,1,0,0,0,13,
246,1,0,0,0,15,252,1,0,0,0,17,256,1,0,0,0,19,260,1,0,0,0,21,264,1,0,0,0,
23,272,1,0,0,0,25,278,1,0,0,0,27,282,1,0,0,0,29,287,1,0,0,0,31,291,1,0,0,
0,33,296,1,0,0,0,35,300,1,0,0,0,37,305,1,0,0,0,39,312,1,0,0,0,41,314,1,0,
0,0,43,317,1,0,0,0,45,320,1,0,0,0,47,322,1,0,0,0,49,325,1,0,0,0,51,327,1,
0,0,0,53,332,1,0,0,0,55,337,1,0,0,0,57,341,1,0,0,0,59,344,1,0,0,0,61,350,
1,0,0,0,63,356,1,0,0,0,65,361,1,0,0,0,67,368,1,0,0,0,69,374,1,0,0,0,71,380,
1,0,0,0,73,388,1,0,0,0,75,395,1,0,0,0,77,401,1,0,0,0,79,406,1,0,0,0,81,413,
1,0,0,0,83,417,1,0,0,0,85,424,1,0,0,0,87,432,1,0,0,0,89,437,1,0,0,0,91,443,
1,0,0,0,93,448,1,0,0,0,95,457,1,0,0,0,97,465,1,0,0,0,99,472,1,0,0,0,101,
479,1,0,0,0,103,483,1,0,0,0,105,487,1,0,0,0,107,493,1,0,0,0,109,500,1,0,
0,0,111,505,1,0,0,0,113,511,1,0,0,0,115,515,1,0,0,0,117,519,1,0,0,0,119,
523,1,0,0,0,121,526,1,0,0,0,123,532,1,0,0,0,125,545,1,0,0,0,127,552,1,0,
0,0,129,559,1,0,0,0,131,565,1,0,0,0,133,567,1,0,0,0,135,577,1,0,0,0,137,
583,1,0,0,0,139,592,1,0,0,0,141,600,1,0,0,0,143,604,1,0,0,0,145,609,1,0,
0,0,147,618,1,0,0,0,149,621,1,0,0,0,151,626,1,0,0,0,153,630,1,0,0,0,155,
633,1,0,0,0,157,638,1,0,0,0,159,641,1,0,0,0,161,646,1,0,0,0,163,653,1,0,
0,0,165,659,1,0,0,0,167,664,1,0,0,0,169,669,1,0,0,0,171,679,1,0,0,0,173,
688,1,0,0,0,175,692,1,0,0,0,177,701,1,0,0,0,179,711,1,0,0,0,181,727,1,0,
0,0,183,729,1,0,0,0,185,731,1,0,0,0,187,733,1,0,0,0,189,735,1,0,0,0,191,
737,1,0,0,0,193,739,1,0,0,0,195,741,1,0,0,0,197,743,1,0,0,0,199,745,1,0,
0,0,201,747,1,0,0,0,203,749,1,0,0,0,205,751,1,0,0,0,207,753,1,0,0,0,209,
755,1,0,0,0,211,757,1,0,0,0,213,759,1,0,0,0,215,761,1,0,0,0,217,218,5,69,
0,0,218,219,5,110,0,0,219,220,5,100,0,0,220,2,1,0,0,0,221,222,5,71,0,0,222,
223,5,111,0,0,223,224,5,116,0,0,224,225,5,111,0,0,225,4,1,0,0,0,226,227,
5,71,0,0,227,228,5,111,0,0,228,229,5,115,0,0,229,230,5,117,0,0,230,231,5,
98,0,0,231,6,1,0,0,0,232,233,5,66,0,0,233,234,5,111,0,0,234,235,5,98,0,0,
235,8,1,0,0,0,236,237,5,85,0,0,237,238,5,112,0,0,238,239,5,100,0,0,239,240,
5,97,0,0,240,241,5,116,0,0,241,242,5,101,0,0,242,10,1,0,0,0,243,244,5,79,
0,0,244,245,5,110,0,0,245,12,1,0,0,0,246,247,5,67,0,0,247,248,5,108,0,0,
248,249,5,101,0,0,249,250,5,97,0,0,250,251,5,114,0,0,251,14,1,0,0,0,252,
253,5,75,0,0,253,254,5,101,0,0,254,255,5,121,0,0,255,16,1,0,0,0,256,257,
5,79,0,0,257,258,5,102,0,0,258,259,5,102,0,0,259,18,1,0,0,0,260,261,5,83,
0,0,261,262,5,101,0,0,262,263,5,116,0,0,263,20,1,0,0,0,264,265,5,82,0,0,
265,266,5,97,0,0,266,267,5,105,0,0,267,268,5,110,0,0,268,269,5,98,0,0,269,
270,5,111,0,0,270,271,5,119,0,0,271,22,1,0,0,0,272,273,5,83,0,0,273,274,
5,112,0,0,274,275,5,101,0,0,275,276,5,101,0,0,276,277,5,100,0,0,277,24,1,
0,0,0,278,279,5,83,0,0,279,280,5,65,0,0,280,281,5,77,0,0,281,26,1,0,0,0,
282,283,5,76,0,0,283,284,5,79,0,0,284,285,5,79,0,0,285,286,5,80,0,0,286,
28,1,0,0,0,287,288,5,79,0,0,288,289,5,70,0,0,289,290,5,70,0,0,290,30,1,0,
0,0,291,292,5,66,0,0,292,293,5,65,0,0,293,294,5,78,0,0,294,295,5,75,0,0,
295,32,1,0,0,0,296,297,5,76,0,0,297,298,5,69,0,0,298,299,5,68,0,0,299,34,
1,0,0,0,300,301,5,76,0,0,301,302,5,111,0,0,302,303,5,97,0,0,303,304,5,100,
0,0,304,36,1,0,0,0,305,306,5,83,0,0,306,307,5,112,0,0,307,308,5,114,0,0,
308,309,5,105,0,0,309,310,5,116,0,0,310,311,5,101,0,0,311,38,1,0,0,0,312,
313,5,61,0,0,313,40,1,0,0,0,314,315,5,60,0,0,315,316,5,62,0,0,316,42,1,0,
0,0,317,318,5,62,0,0,318,319,5,61,0,0,319,44,1,0,0,0,320,321,5,62,0,0,321,
46,1,0,0,0,322,323,5,60,0,0,323,324,5,61,0,0,324,48,1,0,0,0,325,326,5,60,
0,0,326,50,1,0,0,0,327,328,5,116,0,0,328,329,5,104,0,0,329,330,5,101,0,0,
330,331,5,110,0,0,331,52,1,0,0,0,332,333,5,79,0,0,333,334,5,112,0,0,334,
335,5,101,0,0,335,336,5,110,0,0,336,54,1,0,0,0,337,338,5,79,0,0,338,339,
5,117,0,0,339,340,5,116,0,0,340,56,1,0,0,0,341,342,5,73,0,0,342,343,5,110,
0,0,343,58,1,0,0,0,344,345,5,67,0,0,345,346,5,108,0,0,346,347,5,111,0,0,
347,348,5,115,0,0,348,349,5,101,0,0,349,60,1,0,0,0,350,351,5,73,0,0,351,
352,5,110,0,0,352,353,5,112,0,0,353,354,5,117,0,0,354,355,5,116,0,0,355,
62,1,0,0,0,356,357,5,66,0,0,357,358,5,116,0,0,358,359,5,115,0,0,359,360,
5,116,0,0,360,64,1,0,0,0,361,362,5,82,0,0,362,363,5,101,0,0,363,364,5,112,
0,0,364,365,5,101,0,0,365,366,5,97,0,0,366,367,5,116,0,0,367,66,1,0,0,0,
368,369,5,85,0,0,369,370,5,110,0,0,370,371,5,116,0,0,371,372,5,105,0,0,372,
373,5,108,0,0,373,68,1,0,0,0,374,375,5,77,0,0,375,376,5,111,0,0,376,377,
5,117,0,0,377,378,5,115,0,0,378,379,5,101,0,0,379,70,1,0,0,0,380,381,5,66,
0,0,381,382,5,117,0,0,382,383,5,102,0,0,383,384,5,102,0,0,384,385,5,101,
0,0,385,386,5,114,0,0,386,387,5,115,0,0,387,72,1,0,0,0,388,389,5,71,0,0,
389,390,5,108,0,0,390,391,5,111,0,0,391,392,5,98,0,0,392,393,5,97,0,0,393,
394,5,108,0,0,394,74,1,0,0,0,395,396,5,84,0,0,396,397,5,117,0,0,397,398,
5,114,0,0,398,399,5,98,0,0,399,400,5,111,0,0,400,76,1,0,0,0,401,402,5,68,
0,0,402,403,5,114,0,0,403,404,5,97,0,0,404,405,5,119,0,0,405,78,1,0,0,0,
406,407,5,76,0,0,407,408,5,111,0,0,408,409,5,99,0,0,409,410,5,97,0,0,410,
411,5,116,0,0,411,412,5,101,0,0,412,80,1,0,0,0,413,414,5,65,0,0,414,415,
5,100,0,0,415,416,5,100,0,0,416,82,1,0,0,0,417,418,5,78,0,0,418,419,5,85,
0,0,419,420,5,77,0,0,420,421,5,66,0,0,421,422,5,69,0,0,422,423,5,82,0,0,
423,84,1,0,0,0,424,425,5,66,0,0,425,426,5,108,0,0,426,427,5,105,0,0,427,
428,5,116,0,0,428,429,5,116,0,0,429,430,5,101,0,0,430,431,5,114,0,0,431,
86,1,0,0,0,432,433,5,67,0,0,433,434,5,111,0,0,434,435,5,112,0,0,435,436,
5,121,0,0,436,88,1,0,0,0,437,438,5,76,0,0,438,439,5,105,0,0,439,440,5,109,
0,0,440,441,5,105,0,0,441,442,5,116,0,0,442,90,1,0,0,0,443,444,5,70,0,0,
444,445,5,105,0,0,445,446,5,108,0,0,446,447,5,108,0,0,447,92,1,0,0,0,448,
449,5,65,0,0,449,450,5,117,0,0,450,451,5,116,0,0,451,452,5,111,0,0,452,453,
5,98,0,0,453,454,5,97,0,0,454,455,5,99,0,0,455,456,5,107,0,0,456,94,1,0,
0,0,457,458,5,80,0,0,458,459,5,97,0,0,459,460,5,108,0,0,460,461,5,101,0,
0,461,462,5,116,0,0,462,463,5,116,0,0,463,464,5,101,0,0,464,96,1,0,0,0,465,
466,5,68,0,0,466,467,5,111,0,0,467,468,5,117,0,0,468,469,5,98,0,0,469,470,
5,108,0,0,470,471,5,101,0,0,471,98,1,0,0,0,472,473,5,66,0,0,473,474,5,117,
0,0,474,475,5,102,0,0,475,476,5,102,0,0,476,477,5,101,0,0,477,478,5,114,
0,0,478,100,1,0,0,0,479,480,5,80,0,0,480,481,5,101,0,0,481,482,5,110,0,0,
482,102,1,0,0,0,483,484,5,67,0,0,484,485,5,108,0,0,485,486,5,115,0,0,486,
104,1,0,0,0,487,488,5,80,0,0,488,489,5,97,0,0,489,490,5,112,0,0,490,491,
5,101,0,0,491,492,5,114,0,0,492,106,1,0,0,0,493,494,5,68,0,0,494,495,5,101,
0,0,495,496,5,103,0,0,496,497,5,114,0,0,497,498,5,101,0,0,498,499,5,101,
0,0,499,108,1,0,0,0,500,501,5,72,0,0,501,502,5,105,0,0,502,503,5,100,0,0,
503,504,5,101,0,0,504,110,1,0,0,0,505,506,5,70,0,0,506,507,5,108,0,0,507,
508,5,97,0,0,508,509,5,115,0,0,509,510,5,104,0,0,510,112,1,0,0,0,511,512,
5,83,0,0,512,513,5,105,0,0,513,514,5,110,0,0,514,114,1,0,0,0,515,516,5,67,
0,0,516,517,5,111,0,0,517,518,5,115,0,0,518,116,1,0,0,0,519,520,5,68,0,0,
520,521,5,105,0,0,521,522,5,109,0,0,522,118,1,0,0,0,523,524,5,105,0,0,524,
525,5,102,0,0,525,120,1,0,0,0,526,527,5,80,0,0,527,528,5,114,0,0,528,529,
5,105,0,0,529,530,5,110,0,0,530,531,5,116,0,0,531,122,1,0,0,0,532,533,5,
83,0,0,533,534,5,99,0,0,534,535,5,114,0,0,535,536,5,101,0,0,536,537,5,101,
0,0,537,538,5,110,0,0,538,539,5,32,0,0,539,540,5,79,0,0,540,541,5,112,0,
0,541,542,5,101,0,0,542,543,5,110,0,0,543,124,1,0,0,0,544,546,5,45,0,0,545,
544,1,0,0,0,545,546,1,0,0,0,546,548,1,0,0,0,547,549,7,0,0,0,548,547,1,0,
0,0,549,550,1,0,0,0,550,548,1,0,0,0,550,551,1,0,0,0,551,126,1,0,0,0,552,
553,5,76,0,0,553,554,5,111,0,0,554,555,5,119,0,0,555,556,5,114,0,0,556,557,
5,101,0,0,557,558,5,115,0,0,558,128,1,0,0,0,559,560,5,72,0,0,560,561,5,105,
0,0,561,562,5,114,0,0,562,563,5,101,0,0,563,564,5,115,0,0,564,130,1,0,0,
0,565,566,5,44,0,0,566,132,1,0,0,0,567,571,5,39,0,0,568,570,8,1,0,0,569,
568,1,0,0,0,570,573,1,0,0,0,571,569,1,0,0,0,571,572,1,0,0,0,572,574,1,0,
0,0,573,571,1,0,0,0,574,575,6,66,0,0,575,134,1,0,0,0,576,578,7,2,0,0,577,
576,1,0,0,0,578,579,1,0,0,0,579,577,1,0,0,0,579,580,1,0,0,0,580,581,1,0,
0,0,581,582,6,67,0,0,582,136,1,0,0,0,583,584,5,67,0,0,584,585,5,117,0,0,
585,586,5,114,0,0,586,587,5,115,0,0,587,588,5,32,0,0,588,589,5,79,0,0,589,
590,5,102,0,0,590,591,5,102,0,0,591,138,1,0,0,0,592,593,5,67,0,0,593,594,
5,117,0,0,594,595,5,114,0,0,595,596,5,115,0,0,596,597,5,32,0,0,597,598,5,
79,0,0,598,599,5,110,0,0,599,140,1,0,0,0,600,601,5,73,0,0,601,602,5,110,
0,0,602,603,5,107,0,0,603,142,1,0,0,0,604,605,5,84,0,0,605,606,5,101,0,0,
606,607,5,120,0,0,607,608,5,116,0,0,608,144,1,0,0,0,609,613,5,34,0,0,610,
612,8,3,0,0,611,610,1,0,0,0,612,615,1,0,0,0,613,611,1,0,0,0,613,614,1,0,
0,0,614,616,1,0,0,0,615,613,1,0,0,0,616,617,5,34,0,0,617,146,1,0,0,0,618,
619,5,68,0,0,619,620,5,111,0,0,620,148,1,0,0,0,621,622,5,76,0,0,622,623,
5,111,0,0,623,624,5,111,0,0,624,625,5,112,0,0,625,150,1,0,0,0,626,627,5,
70,0,0,627,628,5,111,0,0,628,629,5,114,0,0,629,152,1,0,0,0,630,631,5,84,
0,0,631,632,5,111,0,0,632,154,1,0,0,0,633,634,5,78,0,0,634,635,5,101,0,0,
635,636,5,120,0,0,636,637,5,116,0,0,637,156,1,0,0,0,638,639,5,73,0,0,639,
640,5,102,0,0,640,158,1,0,0,0,641,642,5,69,0,0,642,643,5,108,0,0,643,644,
5,115,0,0,644,645,5,101,0,0,645,160,1,0,0,0,646,647,5,69,0,0,647,648,5,110,
0,0,648,649,5,100,0,0,649,650,5,32,0,0,650,651,5,73,0,0,651,652,5,102,0,
0,652,162,1,0,0,0,653,654,5,87,0,0,654,655,5,104,0,0,655,656,5,105,0,0,656,
657,5,108,0,0,657,658,5,101,0,0,658,164,1,0,0,0,659,660,5,87,0,0,660,661,
5,101,0,0,661,662,5,110,0,0,662,663,5,100,0,0,663,166,1,0,0,0,664,665,5,
80,0,0,665,666,5,108,0,0,666,667,5,97,0,0,667,668,5,121,0,0,668,168,1,0,
0,0,669,670,5,80,0,0,670,671,5,114,0,0,671,672,5,111,0,0,672,673,5,99,0,
0,673,674,5,101,0,0,674,675,5,100,0,0,675,676,5,117,0,0,676,677,5,114,0,
0,677,678,5,101,0,0,678,170,1,0,0,0,679,680,5,69,0,0,680,681,5,110,0,0,681,
682,5,100,0,0,682,683,5,32,0,0,683,684,5,80,0,0,684,685,5,114,0,0,685,686,
5,111,0,0,686,687,5,99,0,0,687,172,1,0,0,0,688,689,5,66,0,0,689,690,5,97,
0,0,690,691,5,114,0,0,691,174,1,0,0,0,692,693,5,87,0,0,693,694,5,97,0,0,
694,695,5,105,0,0,695,696,5,116,0,0,696,697,5,32,0,0,697,698,5,75,0,0,698,
699,5,101,0,0,699,700,5,121,0,0,700,176,1,0,0,0,701,702,5,75,0,0,702,703,
5,101,0,0,703,704,5,121,0,0,704,705,5,32,0,0,705,706,5,83,0,0,706,707,5,
116,0,0,707,708,5,97,0,0,708,709,5,116,0,0,709,710,5,101,0,0,710,178,1,0,
0,0,711,715,7,4,0,0,712,714,7,5,0,0,713,712,1,0,0,0,714,717,1,0,0,0,715,
713,1,0,0,0,715,716,1,0,0,0,716,180,1,0,0,0,717,715,1,0,0,0,718,728,5,61,
0,0,719,720,5,60,0,0,720,728,5,62,0,0,721,722,5,62,0,0,722,728,5,61,0,0,
723,728,5,62,0,0,724,725,5,60,0,0,725,728,5,61,0,0,726,728,5,60,0,0,727,
718,1,0,0,0,727,719,1,0,0,0,727,721,1,0,0,0,727,723,1,0,0,0,727,724,1,0,
0,0,727,726,1,0,0,0,728,182,1,0,0,0,729,730,5,40,0,0,730,184,1,0,0,0,731,
732,5,41,0,0,732,186,1,0,0,0,733,734,5,91,0,0,734,188,1,0,0,0,735,736,5,
93,0,0,736,190,1,0,0,0,737,738,5,123,0,0,738,192,1,0,0,0,739,740,5,125,0,
0,740,194,1,0,0,0,741,742,5,36,0,0,742,196,1,0,0,0,743,744,5,42,0,0,744,
198,1,0,0,0,745,746,5,47,0,0,746,200,1,0,0,0,747,748,5,43,0,0,748,202,1,
0,0,0,749,750,5,45,0,0,750,204,1,0,0,0,751,752,5,58,0,0,752,206,1,0,0,0,
753,754,5,59,0,0,754,208,1,0,0,0,755,756,5,46,0,0,756,210,1,0,0,0,757,758,
5,35,0,0,758,212,1,0,0,0,759,760,5,37,0,0,760,214,1,0,0,0,761,762,5,63,0,
0,762,216,1,0,0,0,8,0,545,550,571,579,613,715,727,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class AMOSLexer extends antlr4.Lexer {

    static grammarFileName = "AMOS.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'End'", "'Goto'", "'Gosub'", "'Bob'", "'Update'", 
                         "'On'", "'Clear'", "'Key'", "'Off'", "'Set'", "'Rainbow'", 
                         "'Speed'", "'SAM'", "'LOOP'", "'OFF'", "'BANK'", 
                         "'LED'", "'Load'", "'Sprite'", "'='", "'<>'", "'>='", 
                         "'>'", "'<='", "'<'", "'then'", "'Open'", "'Out'", 
                         "'In'", "'Close'", "'Input'", "'Btst'", "'Repeat'", 
                         "'Until'", "'Mouse'", "'Buffers'", "'Global'", 
                         "'Turbo'", "'Draw'", "'Locate'", "'Add'", "'NUMBER'", 
                         "'Blitter'", "'Copy'", "'Limit'", "'Fill'", "'Autoback'", 
                         "'Palette'", "'Double'", "'Buffer'", "'Pen'", "'Cls'", 
                         "'Paper'", "'Degree'", "'Hide'", "'Flash'", "'Sin'", 
                         "'Cos'", "'Dim'", "'if'", "'Print'", "'Screen Open'", 
                         null, "'Lowres'", "'Hires'", "','", null, null, 
                         "'Curs Off'", "'Curs On'", "'Ink'", "'Text'", null, 
                         "'Do'", "'Loop'", "'For'", "'To'", "'Next'", "'If'", 
                         "'Else'", "'End If'", "'While'", "'Wend'", "'Play'", 
                         "'Procedure'", "'End Proc'", "'Bar'", "'Wait Key'", 
                         "'Key State'", null, null, "'('", "')'", "'['", 
                         "']'", "'{'", "'}'", "'$'", "'*'", "'/'", "'+'", 
                         "'-'", "':'", "';'", "'.'", "'#'", "'%'", "'?'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, "SCREENOPEN", 
                          "NUMBER", "LOWRES", "HIRES", "COMMA", "COMMENT", 
                          "WS", "CURSOFF", "CURSON", "INK", "TEXT", "STRING", 
                          "DO", "LOOP", "FOR", "TO", "NEXT", "IF", "ELSE", 
                          "ENDIF", "WHILE", "WEND", "PLAY", "PROC", "ENDPROC", 
                          "BAR", "WAITKEY", "KEYSTATE", "IDENTIFIER", "COMPARISON", 
                          "BRACKETOPEN_PROP", "BRACKETCLOSE_PROP", "BRACKETOPEN_ARRAY", 
                          "BRACKETCLOSE_ARRAY", "BRACKETOPEN_FUNCTION", 
                          "BRACKETCLOSE_FUNCTION", "HECADECIMAL", "MULTIPLY", 
                          "DIVIDE", "ADD", "SUBTRACT", "STATEMENT_SEPARATOR", 
                          "FINISH_AND_ADD_OTHER_STATEMENT", "DOT", "HASHTAG", 
                          "PERCENT", "QUESTION" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
                      "T__49", "T__50", "T__51", "T__52", "T__53", "T__54", 
                      "T__55", "T__56", "T__57", "T__58", "T__59", "T__60", 
                      "SCREENOPEN", "NUMBER", "LOWRES", "HIRES", "COMMA", 
                      "COMMENT", "WS", "CURSOFF", "CURSON", "INK", "TEXT", 
                      "STRING", "DO", "LOOP", "FOR", "TO", "NEXT", "IF", 
                      "ELSE", "ENDIF", "WHILE", "WEND", "PLAY", "PROC", 
                      "ENDPROC", "BAR", "WAITKEY", "KEYSTATE", "IDENTIFIER", 
                      "COMPARISON", "BRACKETOPEN_PROP", "BRACKETCLOSE_PROP", 
                      "BRACKETOPEN_ARRAY", "BRACKETCLOSE_ARRAY", "BRACKETOPEN_FUNCTION", 
                      "BRACKETCLOSE_FUNCTION", "HECADECIMAL", "MULTIPLY", 
                      "DIVIDE", "ADD", "SUBTRACT", "STATEMENT_SEPARATOR", 
                      "FINISH_AND_ADD_OTHER_STATEMENT", "DOT", "HASHTAG", 
                      "PERCENT", "QUESTION" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

AMOSLexer.EOF = antlr4.Token.EOF;
AMOSLexer.T__0 = 1;
AMOSLexer.T__1 = 2;
AMOSLexer.T__2 = 3;
AMOSLexer.T__3 = 4;
AMOSLexer.T__4 = 5;
AMOSLexer.T__5 = 6;
AMOSLexer.T__6 = 7;
AMOSLexer.T__7 = 8;
AMOSLexer.T__8 = 9;
AMOSLexer.T__9 = 10;
AMOSLexer.T__10 = 11;
AMOSLexer.T__11 = 12;
AMOSLexer.T__12 = 13;
AMOSLexer.T__13 = 14;
AMOSLexer.T__14 = 15;
AMOSLexer.T__15 = 16;
AMOSLexer.T__16 = 17;
AMOSLexer.T__17 = 18;
AMOSLexer.T__18 = 19;
AMOSLexer.T__19 = 20;
AMOSLexer.T__20 = 21;
AMOSLexer.T__21 = 22;
AMOSLexer.T__22 = 23;
AMOSLexer.T__23 = 24;
AMOSLexer.T__24 = 25;
AMOSLexer.T__25 = 26;
AMOSLexer.T__26 = 27;
AMOSLexer.T__27 = 28;
AMOSLexer.T__28 = 29;
AMOSLexer.T__29 = 30;
AMOSLexer.T__30 = 31;
AMOSLexer.T__31 = 32;
AMOSLexer.T__32 = 33;
AMOSLexer.T__33 = 34;
AMOSLexer.T__34 = 35;
AMOSLexer.T__35 = 36;
AMOSLexer.T__36 = 37;
AMOSLexer.T__37 = 38;
AMOSLexer.T__38 = 39;
AMOSLexer.T__39 = 40;
AMOSLexer.T__40 = 41;
AMOSLexer.T__41 = 42;
AMOSLexer.T__42 = 43;
AMOSLexer.T__43 = 44;
AMOSLexer.T__44 = 45;
AMOSLexer.T__45 = 46;
AMOSLexer.T__46 = 47;
AMOSLexer.T__47 = 48;
AMOSLexer.T__48 = 49;
AMOSLexer.T__49 = 50;
AMOSLexer.T__50 = 51;
AMOSLexer.T__51 = 52;
AMOSLexer.T__52 = 53;
AMOSLexer.T__53 = 54;
AMOSLexer.T__54 = 55;
AMOSLexer.T__55 = 56;
AMOSLexer.T__56 = 57;
AMOSLexer.T__57 = 58;
AMOSLexer.T__58 = 59;
AMOSLexer.T__59 = 60;
AMOSLexer.T__60 = 61;
AMOSLexer.SCREENOPEN = 62;
AMOSLexer.NUMBER = 63;
AMOSLexer.LOWRES = 64;
AMOSLexer.HIRES = 65;
AMOSLexer.COMMA = 66;
AMOSLexer.COMMENT = 67;
AMOSLexer.WS = 68;
AMOSLexer.CURSOFF = 69;
AMOSLexer.CURSON = 70;
AMOSLexer.INK = 71;
AMOSLexer.TEXT = 72;
AMOSLexer.STRING = 73;
AMOSLexer.DO = 74;
AMOSLexer.LOOP = 75;
AMOSLexer.FOR = 76;
AMOSLexer.TO = 77;
AMOSLexer.NEXT = 78;
AMOSLexer.IF = 79;
AMOSLexer.ELSE = 80;
AMOSLexer.ENDIF = 81;
AMOSLexer.WHILE = 82;
AMOSLexer.WEND = 83;
AMOSLexer.PLAY = 84;
AMOSLexer.PROC = 85;
AMOSLexer.ENDPROC = 86;
AMOSLexer.BAR = 87;
AMOSLexer.WAITKEY = 88;
AMOSLexer.KEYSTATE = 89;
AMOSLexer.IDENTIFIER = 90;
AMOSLexer.COMPARISON = 91;
AMOSLexer.BRACKETOPEN_PROP = 92;
AMOSLexer.BRACKETCLOSE_PROP = 93;
AMOSLexer.BRACKETOPEN_ARRAY = 94;
AMOSLexer.BRACKETCLOSE_ARRAY = 95;
AMOSLexer.BRACKETOPEN_FUNCTION = 96;
AMOSLexer.BRACKETCLOSE_FUNCTION = 97;
AMOSLexer.HECADECIMAL = 98;
AMOSLexer.MULTIPLY = 99;
AMOSLexer.DIVIDE = 100;
AMOSLexer.ADD = 101;
AMOSLexer.SUBTRACT = 102;
AMOSLexer.STATEMENT_SEPARATOR = 103;
AMOSLexer.FINISH_AND_ADD_OTHER_STATEMENT = 104;
AMOSLexer.DOT = 105;
AMOSLexer.HASHTAG = 106;
AMOSLexer.PERCENT = 107;
AMOSLexer.QUESTION = 108;



